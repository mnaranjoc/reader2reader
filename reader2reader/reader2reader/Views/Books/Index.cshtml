@model reader2reader.ViewModels.BooksViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
}

@*<h2>Index</h2>*@

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Price)
        </th>
        @*<th></th>*@
    </tr>

    @foreach (var item in Model.Books)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Title, "Details", new { id = item.Id })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
<div>
    Page @(Model.Books.PageCount < Model.Books.PageNumber ? 0 : Model.Books.PageNumber) of @Model.Books.PageCount
    @Html.PagedListPager(Model.Books, page => Url.Action("Index", new { Search = @Model.Search, page }))
</div>